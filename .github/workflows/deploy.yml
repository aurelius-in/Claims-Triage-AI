name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
  push:
    branches: [main]
    tags: ["v*.*.*"]

permissions:
  contents: read
  deployments: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Add known hosts
        run: |
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          ssh ${DEPLOY_USER}@${DEPLOY_HOST} << 'EOF'
          set -e
          cd ${DEPLOY_PATH}
          if [ ! -d .git ]; then
            git clone https://github.com/${GITHUB_REPOSITORY}.git ${DEPLOY_PATH}
            cd ${DEPLOY_PATH}
          fi
          git fetch --all
          git checkout main
          git pull --rebase
          docker compose pull
          docker compose up -d --remove-orphans
          docker system prune -f
          EOF

      - name: Post-deploy health checks
        run: |
          sleep 30
          curl -fsS http://${{ secrets.DEPLOY_HOST }}:8000/health || exit 1
          curl -fsS http://${{ secrets.DEPLOY_HOST }}:8000/api/v1/health || exit 1
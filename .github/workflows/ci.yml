name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read

jobs:
  backend:
    name: Backend - Lint, Typecheck, Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install black isort flake8 mypy pytest pytest-cov bandit safety

      - name: Code Style (Black/Isort)
        run: |
          black --check backend
          isort --check-only backend

      - name: Lint (Flake8)
        run: |
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 backend --count --exit-zero --max-complexity=12 --max-line-length=127 --statistics

      - name: Type Check (mypy)
        run: |
          mypy backend --ignore-missing-imports

      - name: Security (Bandit/Safety)
        run: |
          bandit -r backend -q || true
          safety check -i 70612 -i 70613 || true

      - name: Tests (pytest + coverage)
        run: |
          pytest backend/tests -v --cov=backend --cov-report=xml --cov-report=term-missing

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.xml

  frontend:
    name: Frontend - Lint, Typecheck, Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Typecheck
        run: npm run type-check --if-present

      - name: Lint
        run: npm run lint --if-present

      - name: Prettier check
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Test (jest + coverage)
        run: npm test -- --coverage --watchAll=false --passWithNoTests

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: coverage

  trivy:
    name: Security Scan (Trivy FS)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif